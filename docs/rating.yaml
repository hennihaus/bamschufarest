openapi: 3.0.3
info:
  title: BAM Business Integration - Schufa
  contact:
    name: Jan-Hendrik Hausner
    email: jan-hendrik.hausner@outlook.com
  license:
    name: Apache 2.0
    url: https://github.com/hennihaus/bamschufarest/blob/master/LICENSE
  version: 1.0.0
servers:
  - url: https://bambusinessintegration.wi.hs-furtwangen.de/schufa
    description: Base-URL
paths:
  /ratings/score:
    get:
      tags:
        - Schufa-Score
      operationId: getRatingsScore
      parameters:
        - $ref: '#/components/parameters/socialSecurityNumber'
        - $ref: '#/components/parameters/ratingLevel'
        - $ref: '#/components/parameters/delayInMilliseconds'
        - $ref: '#/components/parameters/username'
        - $ref: '#/components/parameters/password'
      responses:
        200:
          $ref: '#/components/responses/getRating'
        400:
          $ref: '#/components/responses/validationError'
        404:
          $ref: '#/components/responses/groupNotFoundError'
        500:
          $ref: '#/components/responses/internalServerError'
tags:
  - name: Schufa-Score
components:
  parameters:
    socialSecurityNumber:
      name: socialSecurityNumber
      description: Zufällige Sozialversicherungsnummer
      in: query
      required: true
      example: 12123456M123
      schema:
        type: string
    ratingLevel:
      name: ratingLevel
      description: Bewertung des Debitors
      in: query
      required: true
      example: A
      schema:
        $ref: '#/components/schemas/RatingLevel'
    delayInMilliseconds:
      name: delayInMilliseconds
      description: Zeit in Millisekunden, um die die Antwort verzögert werden soll
      in: query
      required: true
      example: 0
      schema:
        type: integer
        format: int64
    username:
      name: username
      description: Benutzername der Gruppe
      in: query
      required: true
      example: Beispielgruppe
      schema:
        type: string
    password:
      name: password
      description: Passwort der Gruppe
      in: query
      required: true
      example: OOfKqWksmA
      schema:
        type: string
        format: password
  responses:
    getRating:
      description: Schufa-Score des Debitors
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Rating'
          example: { "score": 9858, "failureRiskInPercent": 0.77 }
    validationError:
      description: Ungültige Parameter
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: { "message": "[username is required, password is required]", "dateTime": "2022-01-31T07:43:30"}
    groupNotFoundError:
      description: Gruppe wurde nicht gefunden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example: { "message": "[group not found by username and password]", "dateTime": "2022-01-31T07:43:30"}
    internalServerError:
      description: Interner Server Fehler
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    RatingLevel:
      type: string
      enum:
        - A
        - B
        - C
        - D
        - E
        - F
        - G
        - H
        - I
        - J
        - K
        - L
        - N
        - O
        - P
    Rating:
      type: object
      required:
        - score
        - failureRiskInPercent
      properties:
        score:
          type: integer
          format: int32
        failureRiskInPercent:
          type: number
          format: double
    Error:
      type: object
      required:
        - message
        - dateTime
      properties:
        message:
          type: string
        dateTime:
          type: string
          format: date-time
